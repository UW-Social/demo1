{"version":3,"file":"event-SlV5Bnt4.js","sources":["../../src/stores/event.ts"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport { ref } from 'vue';\r\nimport { collection, query, orderBy, getDocs } from 'firebase/firestore';\r\nimport { db } from '../firebase/config';\r\nimport type { Event } from '../types/event';\r\n\r\nexport const useEventStore = defineStore('event', () => {\r\n  const events = ref<Event[]>([]);\r\n\r\n  const fetchEvents = async () => {\r\n    try {\r\n      const eventsCollection = collection(db, 'events');\r\n      const eventsQuery = query(eventsCollection, orderBy('createdAt', 'desc'));\r\n      const querySnapshot = await getDocs(eventsQuery);\r\n\r\n      events.value = querySnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      })) as Event[];\r\n    } catch (error) {\r\n      console.error('Failed to fetch events:', error);\r\n    }\r\n  };\r\n\r\n  return { events, fetchEvents };\r\n});"],"names":["useEventStore","defineStore","events","ref","eventsCollection","collection","db","eventsQuery","query","orderBy","querySnapshot","getDocs","doc","error"],"mappings":"iFAMa,MAAAA,EAAgBC,EAAY,QAAS,IAAM,CAChD,MAAAC,EAASC,EAAa,EAAE,EAiBvB,MAAA,CAAE,OAAAD,EAAQ,YAfG,SAAY,CAC1B,GAAA,CACI,MAAAE,EAAmBC,EAAWC,EAAI,QAAQ,EAC1CC,EAAcC,EAAMJ,EAAkBK,EAAQ,YAAa,MAAM,CAAC,EAClEC,EAAgB,MAAMC,EAAQJ,CAAW,EAE/CL,EAAO,MAAQQ,EAAc,KAAK,IAAYE,IAAA,CAC5C,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,QACKC,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,CAAA,CAElD,CAE6B,CAC/B,CAAC"}